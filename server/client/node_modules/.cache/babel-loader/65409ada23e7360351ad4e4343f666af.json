{"ast":null,"code":"import _toConsumableArray from\"/home/drex/Projects/memories/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{CREATE,FETCH_ALL,UPDATE,DELETE,LIKE}from'../constants/actionTypes';var reducer=function reducer(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL:return action.payload;case CREATE:return[].concat(_toConsumableArray(posts),[action.payload]);case UPDATE:case LIKE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case DELETE:return posts.filter(function(post){return post._id!==action.payload;});default:return posts;}};export default reducer;","map":{"version":3,"sources":["/home/drex/Projects/memories/client/src/reducers/posts.js"],"names":["CREATE","FETCH_ALL","UPDATE","DELETE","LIKE","reducer","posts","action","type","payload","map","post","_id","filter"],"mappings":"iIAAA,OAASA,MAAT,CAAiBC,SAAjB,CAA4BC,MAA5B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAwD,0BAAxD,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACtC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,SAAL,CACE,MAAOM,CAAAA,MAAM,CAACE,OAAd,CACF,IAAKT,CAAAA,MAAL,CACE,mCAAWM,KAAX,GAAkBC,MAAM,CAACE,OAAzB,GACF,IAAKP,CAAAA,MAAL,CACA,IAAKE,CAAAA,IAAL,CACE,MAAOE,CAAAA,KAAK,CAACI,GAAN,CAAU,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,CAAkCL,MAAM,CAACE,OAAzC,CAAmDE,IAAvD,EAAd,CAAP,CACF,IAAKR,CAAAA,MAAL,CACE,MAAOG,CAAAA,KAAK,CAACO,MAAN,CAAa,SAAAF,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAxB,EAAjB,CAAP,CACF,QACE,MAAOH,CAAAA,KAAP,CAXJ,CAaD,CAdD,CAgBA,cAAeD,CAAAA,OAAf","sourcesContent":["import { CREATE, FETCH_ALL, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst reducer = (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n    case LIKE: \n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n    default:\n      return posts;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}