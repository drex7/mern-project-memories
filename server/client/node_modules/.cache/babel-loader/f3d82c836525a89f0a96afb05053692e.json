{"ast":null,"code":"import _objectSpread from\"/home/drex/Projects/memories/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/drex/Projects/memories/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/drex/Projects/memories/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/drex/Projects/memories/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import FileBase from'react-file-base64';import{useDispatch,useSelector}from'react-redux';import{createPost,updatePost}from'../../actions/posts';import useStyles from'./styles';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Form=function Form(_ref){var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var _useState=useState({creator:'',title:'',message:'',tags:[],selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var post=useSelector(function(state){return currentId?state.posts.find(function(p){return p._id===currentId;}):null;});var classes=useStyles();var dispatch=useDispatch();useEffect(function(){if(post)setPostData(post);},[post]);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:evt.preventDefault();if(currentId===0){console.log('Creating a new post');dispatch(createPost(postData));}else{console.log('Updating post');dispatch(updatePost(currentId,postData));}clear();case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var clear=function clear(){setCurrentId(0);setPostData({creator:'',title:'',message:'',tags:[],selectedFile:''});};return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(\"form\",{className:\"\".concat(classes.root,\" \").concat(classes.form),autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[currentId?'Editing':'Creating',\" a Memory\"]}),/*#__PURE__*/_jsx(TextField,{name:\"creator\",variant:\"outlined\",label:\"Creator\",fullWidth:true,value:postData.creator,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{creator:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"message\",variant:\"outlined\",label:\"Message\",fullWidth:true,value:postData.message,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{message:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/_jsx(\"div\",{className:classes.fileInput,children:/*#__PURE__*/_jsx(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref3){var base64=_ref3.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})}),/*#__PURE__*/_jsx(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true,children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true,children:\"Clear\"})]})});};export default Form;","map":{"version":3,"sources":["/home/drex/Projects/memories/client/src/components/Form/Form.js"],"names":["React","useEffect","useState","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","useStyles","Form","currentId","setCurrentId","creator","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","evt","preventDefault","console","log","clear","paper","root","form","e","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [ postData, setPostData ] = useState({ creator: '', title: '', message: '', tags: [], selectedFile: ''});\n  const post = useSelector((state) => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    \n    if(currentId === 0) {\n      console.log('Creating a new post');\n      dispatch(createPost(postData));\n    } else {\n      console.log('Updating post');\n      dispatch(updatePost(currentId, postData));\n    }\n      clear();\n  }\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ creator: '', title: '', message: '', tags: [], selectedFile: '' });\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form className={`${classes.root} ${classes.form}`} autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{ currentId ? 'Editing' : 'Creating' } a Memory</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth \n          value={postData.creator} \n          onChange={(e) => setPostData({ ...postData, creator: e.target.value })}\n        />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth \n          value={postData.title} \n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth \n          value={postData.message} \n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth \n          value={postData.tags} \n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n           type=\"file\" \n           multiple={false} \n           onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })} \n          />\n        </div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}