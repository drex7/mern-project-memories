{"ast":null,"code":"var _jsxFileName = \"/home/drex/Projects/memories/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const posts = useSelector(state => state.posts);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(postData));\n    } else dispatch(createPost(postData));\n  };\n\n  const clear = () => {\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      image: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `${classes.root} ${classes.form}`,\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"Y+YDNfoYmeVBxunNtF0RCPARwxs=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/drex/Projects/memories/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","useStyles","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","posts","state","classes","dispatch","handleSubmit","evt","preventDefault","clear","image","paper","root","form","e","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [ postData, setPostData ] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\n  const posts = useSelector(state => state.posts);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if(currentId) {\n      dispatch(updatePost(postData));\n    } else  dispatch(createPost(postData));\n  }\n\n  const clear = () => {\n    setPostData({ creator: '', title: '', message: '', tags: '', image: '' });\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form className={`${classes.root} ${classes.form}`} autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">Creating a Memory</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth \n          value={postData.creator} \n          onChange={ (e) => setPostData({ ...postData, creator: e.target.value })}\n        />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth \n          value={postData.title} \n          onChange={ (e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth \n          value={postData.message} \n          onChange={ (e) => setPostData({ ...postData, message: e.target.value })}\n        />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth \n          value={postData.tags} \n          onChange={ (e) => setPostData({ ...postData, tags: e.target.value })}\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n           type=\"file\" \n           multiple={false} \n           onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })} \n          />\n        </div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}